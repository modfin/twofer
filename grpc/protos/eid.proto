syntax = "proto3";

package geid;

service EID {
    rpc GetProviders (Empty) returns (Providers) {
    };
    rpc AuthInit (Req) returns (Inter) {
    };
    rpc SignInit (Req) returns (Inter) {
    };
    rpc Collect (Inter) returns (Resp) {
    };
    rpc Peek (Inter) returns (Resp) {
    };
    rpc Cancel (Inter) returns (Empty) {
    };
    rpc Change (Inter) returns (Resp) {
    };

}

message Empty {
}

message Providers {
    repeated Provider providers = 1;
}

message Provider {
    string name = 1;
}

message User {
    bool inferred = 1;
    string ssn = 2;
    string ssn_country = 3;
    string email = 4;
    string phone = 5;
    string ip = 6;
    string name = 7;
    string surname = 8;
    string date_of_birth = 9;
}

message Req {

    message Payload {
        string text = 1;
        bytes data = 2;
    }
    Provider provider = 1;
    User who = 2;
    Payload payload = 3;
}

message Inter {
    Req req = 2;

    enum Mode {
        AUTH = 0;
        SIGN = 1;
    }
    Mode mode = 3;
    string ref = 4;
    string inferred = 5;
    string URI = 6;

    bytes internal = 7;
}

message Resp {

    enum Status {
        STATUS_UNKNOWN = 0;
        STATUS_PENDING = 1;
        STATUS_ONGOING = 2;
        STATUS_APPROVED = 3;
        STATUS_CANCELED = 4;
        STATUS_RP_CANCELED = 5;
        STATUS_EXPIRED = 6;
        STATUS_REJECTED = 7;
        STATUS_FAILED = 8;
        STATUS_START_FAILED = 9;
    }

    Inter inter = 2;
    Status status = 3;


    User info = 4;
    bytes signature = 5;
    bytes extra = 6;
}



